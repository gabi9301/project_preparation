양방향 연관관계와 연관관계의 주인

연관관계 매핑을 제대로 하기 위해선 우선 객체와 테이블이 관계를 맺는 방식에
커다란 차이가 있다는 점을 이해해야 한다.

객체의 연관관계는 두 개의 객체가 서로를 가리키는 두 가지 단방향 연관관계로 설명할 수 있다.
ex) A ->B			B -> A

반면 테이블의 연관관계는 상호 테이블 간의 양방향 연관관계 하나로 이루어진다.
ex) A < - > B

테이블의 경우 외래 키 하나로 두 테이블의 연관관계를 관리하며 양쪽으로 조인이 가능하다.

그러나 객체의 경우 두 객체 중 하나로 외래 키를 관리해야만 한다.

****연관관계의 주인(Owner)
양방향 매핑 규칙
- 객체의 두 관계 중 하나를 연관관계의 주인으로 지정한다.

- 연관관계의 주인만이 외래 키를 등록, 수정 가능하다.

- 주인이 아닌 쪽은 조회만 가능하다.

- 주인은 mappedBy 속성을 사용하지 않는다.

- 주인이 아닌 쪽은 mappedBy 속성으로 주인을 지정해주어야 한다.


이 때 연관관계의 주인이 되는 쪽은 외래 키를 가지고 있는 쪽이다. 
즉, 테이블에서 조인을 할 때 사용하는 키를 기본 키가 아닌 외래 키로 가지고 있는 객체가 주인이 된다.






 